[
  
  {
    "title": "Kali GUI",
    "url": "/posts/kali-gui/",
    "categories": "WSL, Kali, GUI",
    "tags": "wsl2",
    "date": "2022-10-01 20:55:00 +0700",
    





    "snippet": "Kali win-kex  menjalankan kali linux di wsl2 + GUI desktop environmentsource: https://www.kali.org/docs/wsl/win-kex/Win-Kex  wsl2  kali-linux  install win-kex    kali@kali:~$ sudo apt updatekali@kali:~$kali@kali:~$ sudo apt install -y kali-win-kex      Run win-kex from terminal  Windows Mode =&gt; kex --win -s  ESM Mode ==&gt; kex --esm --ip -s  Seamless Mode ==&gt; kex --sl -sBikin shortcut  Powershell  Settings  Add a New Profile  + New Empty Profile    name: Win-KexCommandLine: wsl -d kali-linux kex --wtstart -s        Save"
  },
  
  {
    "title": "Rise Up",
    "url": "/posts/syndrome-part-3/",
    "categories": "Story, Kisahku",
    "tags": "",
    "date": "2022-08-18 18:36:04 +0700",
    





    "snippet": "finally here"
  },
  
  {
    "title": "bash_aliases",
    "url": "/posts/bash_aliases/",
    "categories": "WSL, Ubuntu",
    "tags": "wsl2",
    "date": "2022-08-02 11:25:47 +0700",
    





    "snippet": "Bash Aliases  ‚Ä¶alias myip=\"ip addr show eth0 | grep inet | awk '{ print $2; }' | sed 's/\\/.*$//'\""
  },
  
  {
    "title": "UFW",
    "url": "/posts/ufw/",
    "categories": "WSL, Ubuntu, Firewall",
    "tags": "wsl2",
    "date": "2022-08-02 11:07:11 +0700",
    





    "snippet": "sudo ufw app listsudo ufw allow in ‚ÄúApache‚Äùsudo ufw status"
  },
  
  {
    "title": "composer",
    "url": "/posts/composer/",
    "categories": "WSL, Ubuntu, Composer",
    "tags": "wsl2",
    "date": "2022-08-02 10:57:44 +0700",
    





    "snippet": "install composer globalphp -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"php -r \"if (hash_file('sha384', 'composer-setup.php') === '55ce33d7678c5a611085589f1f3ddf8b3c52d662cd01d4ba75c0ee0459970c2200a51f492d557530c71c15d8dba01eae') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"php composer-setup.phpphp -r \"unlink('composer-setup.php');\""
  },
  
  {
    "title": "adonis test load",
    "url": "/posts/adonis-test/",
    "categories": "adonis, ts",
    "tags": "",
    "date": "2022-07-23 08:36:34 +0700",
    





    "snippet": "Adonis Code Snippetshttps://gist.githubusercontent.com/rendrapcx/a2a00ba03ce183d2cf594e2136e06bba/raw/5aef4f803004a06e5f8b83a9da2e5662a68b8366/routes-user.ts"
  },
  
  {
    "title": "LAMPP",
    "url": "/posts/lampp/",
    "categories": "WSL, Ubuntu, Lampp",
    "tags": "wsl2, apache, php, mysql",
    "date": "2022-07-23 08:18:14 +0700",
    





    "snippet": "  Siap nanti belom ya :DApache2sudo apt install -y apache2PHPsudo apt-get install -y php libapache2-mod-phpsudo apt-get install -y php-curl php-gd php-json php-mbstring php-xmlMySqlsudo apt-get install -y mysql-server php-mysqlsudo service mysql restartsudo mysql_secure_installation    #&gt; Validate password component: N    #&gt; New password: MyPassword    #&gt; Remove anonymous users: Y    #&gt; Disallow root login remotely: Y    #&gt; Reload privilege tables now: Ysudo service mysql stopsudo usermod -d /var/lib/mysql mysqlsudo service mysql startchange doc root to homecd ~mkdir wwwsudo sed -i \"s;/var/www;$HOME/www;g\" /etc/apache2/apache2.confsudo sed -i \"s;/var/www/html;$HOME/www;g\" /etc/apache2/sites-available/000-default.confmkdir ~/test# optional# sudo chown -R $USER:$USER ~/testcreate domainsudo nano /etc/apache2/sites-available/test.conf  add these:```&lt;VirtualHost *:80&gt;    ServerName your_domain    ServerAlias www.your_domain    ServerAdmin webmaster@localhost    DocumentRoot /var/www/your_domain    ErrorLog ${APACHE_LOG_DIR}/error.log    CustomLog ${APACHE_LOG_DIR}/access.log combined&lt;/VirtualHost&gt;sudo a2ensite test.devsudo a2dissite 000-defaultsudo apache2ctl configtestsudo service apache2 reload## Config Firewall / UFWsudo ufw app listsudo ufw allow in ‚ÄúApache‚Äùsudo ufw status```  matikan saja dulu firewall di ubuntu wsl, lagian ini cuman kita jadiin sebagai development server."
  },
  
  {
    "title": "Keyboard fn auto lock",
    "url": "/posts/keyboard-fn/",
    "categories": "Notes",
    "tags": "other",
    "date": "2022-07-11 21:24:51 +0700",
    





    "snippet": "Easy way fn + esc Hard waysetting lewat bios‚Ä¶ ü§î"
  },
  
  {
    "title": "Go Cheatsheet",
    "url": "/posts/golang/",
    "categories": "Notes, Cheatsheet",
    "tags": "windows-11",
    "date": "2022-07-05 00:00:40 +0700",
    





    "snippet": "Apa itu GO?APakah ini bagian dari Gojek? Oh ternyata bukan lol‚Ä¶ Go adalah bahasa pemrograman yang dibuat oleh Google pada tahun 2007. Sejak saat itulah mereka memutuskan untuk mengimplementasikan Go untuk membuat produk dan servis dalam skala besar.Go is expressive, concise, clean, and efficient. Its concurrency mechanisms make it easy to write programs that get the most out of multicore and networked machines, while its novel type system enables flexible and modular program construction. Go compiles quickly to machine code yet has the convenience of garbage collection and the power of run-time reflection. It‚Äôs a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language.  Go is an open source programming language supported by Google  Easy to learn and get started with  Built-in concurrency and a robust standard library  Growing ecosystem of partners, communities, and toolsCheck Latest Go Version  https://go.dev/dl/  Copy link base on your architecture PC  Atau bisa juga install dari repository ubuntu dengan cara sudo apt install golang-g.Install Go  open powershell, type wsl    cd ~        Download package    wget https://go.dev/dl/go1.18.3.linux-amd64.tar.gz        Extract    sudo tar -xvf go1.18.3.linux-amd64.tar.gz        Move to /usr/local    sudo mv go /usr/local      Edit .bashrc  masih dengan wsl guys‚Ä¶      copas path environment: code ~/.bashrc      export GOROOT=/usr/local/goexport GOPATH=$HOME/goexport PATH=$GOPATH/bin:$GOROOT/bin:$PATH              reload terminal: source ~/.bashrc    next cek dulu      which gogo version            Saatnya mencoba  cd /source/labs ini bebas mo bikin dimana sih  mkdir go  cd go  mkdir hello  cd hello  go mod init example/hello  touch hello.go  nano hello.go    package mainimport \"fmt\"func main() {   fmt.Println(\"Hello, World!\")}        go run . or go run hello.gonano hello.goTest Running Code"
  },
  
  {
    "title": "Touch a File",
    "url": "/posts/touch-a-file/",
    "categories": "Labs",
    "tags": "bash",
    "date": "2022-07-04 22:35:42 +0700",
    





    "snippet": "Bikin File Satu2#!/bin/bash# make a single file# No validation yetn=0max=1nama=\"rendra\"# echo \"Masukan nama file\"# read namaarr=$(ls $nama* | grep -o -E '[0-9]+')for x in $arrdo    if [ $x -gt $n ]    then        n=$x    fidoneif [ $n -eq $max ]then    echo \"Gak bisa nambah file baru, maksimal $max.\"else    baru=$(( $n + 1 ))    touch $nama$baru    echo \"$nama$baru was Created\"fi  kalo pke $USER pastikan nama usernya gak ada angka atau karakter khusus,  ls $USER* | grep -o -E '[0-9]+'. Misal usernya s3-user, maka ketika create file, akan skip pada file3.create 25 empty files#!/bin/bash# create 25 empty files# No VALIDATION YETi=0while [ $i -le 25 ]do    touch \"file$i\"    echo Number: $i    ((i++))done"
  },
  
  {
    "title": "Node Version Manager",
    "url": "/posts/nvm/",
    "categories": "Node, NPM",
    "tags": "install, windows-11",
    "date": "2022-07-04 02:27:11 +0700",
    





    "snippet": "Node Version Manager on WSL  ini untuk ubuntu, wsl atau multipass dan sebangsanya, untuk windows disini 1Requirementwhich curl# if not installed:# sudo apt install curlDownload Installer to homecd ~curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bashReload .bashrcsource ~/.bashrcUsefull Command            command      description                  nvm      show manual page              nvm list      show available list              nvm ls_remote | less      show all available list              nvm install lts      install last lts              nvm -v      cek versi nvm              node -v      cek versi node              npm -v      cek versi npm              nvm use lts      gunakan versi lts yg terinstall                  View on Microsoft Docs¬†&#8617;      "
  },
  
  {
    "title": "Laragon Cmder",
    "url": "/posts/cmder-cheatsheet/",
    "categories": "Notes, Cheatsheet",
    "tags": "windows-11",
    "date": "2022-07-03 19:52:14 +0700",
    





    "snippet": "Laragon Cmder Cheatsheer            Command      Descriptions                  alias      show all alias              alias /?      show alias man page              alias /reload      reload alias, when directly to the file              alias me=echo ‚Äúrendra‚Äù      create me alias              unalias me      remove alias me              alias www=C:\\laragon\\www      create www alias              alias /d www      remove alias www              n=notepad++ $*      create alias        by default, the macrofile store in C:\\laragon\\bin\\cmder\\config\\user-aliases.cmd"
  },
  
  {
    "title": "Powershell Permanent Alias",
    "url": "/posts/powershell-permanent-alias/",
    "categories": "Notes, Cheatsheet",
    "tags": "windows-11",
    "date": "2022-07-03 09:33:15 +0700",
    





    "snippet": "  updated at 2022-10-03 19:05Initialcheckecho $profile# kalo belum ada bikin dulu# New-Item -Path $PROFILE -Type File -Forceedit in codecode $profilecopas saja duluSet-Alias np notepad.exefunction emu-list {emulator -list-avds}Set-Alias -Name emu -Value emu-listfunction emu-1 {emulator -avd Pixel_4_API_30 }Set-Alias -Name em1 -Value emu-1Function Goto-Projects { Set-Location -Path c:\\Users\\rendr\\Projects }Set-Alias -Name cdp -Value Goto-ProjectsFunction Goto-Www { Set-Location -Path C:\\laragon\\www }Set-Alias -Name www -Value Goto-WwwisError??  Jika ada error seperti ini:Run Powershell as AdminCheck PolicyGet-ExecutionPolicyGet-ExecutionPolicy -ListSet Policy localSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachineTest AliasInstall Oh My Posthttps://ohmyposh.dev/docs/‚Äúoh my posh contoh‚ÄùUseful Command            command      Descriptions                  Get-ComputerInfo      Informasi PC              Get-ComputerInfo -Property ‚Äú*version‚Äù      ¬†              Get-ComputerInfo -Property ‚Äú*Arch*‚Äù      ¬†              systeminfo | find ‚ÄúSystem Type‚Äù      ¬†              (Get-Command notepad).Source      ¬†              Get-Service      Get All Services              Get-Service *lan*      ¬†              Get-Service Lanman      ¬†              Get-Service -Name LanmanWorkstation -RequiredServices      ¬†              Get-Service -Name LanmanServer -RequiredServices      ¬†      Get-Service"
  },
  
  {
    "title": "Expo Cli",
    "url": "/posts/expo-cli/",
    "categories": "Notes, Cheatsheet",
    "tags": "windows-11",
    "date": "2022-07-03 00:43:50 +0700",
    





    "snippet": "What is?Setting Development EnvironmentRequirements:  Nodejs  GitRecomended Tools  Vscode  vscode expo extension  yarn  powershell, bash via wslInstalling Expo CLInpm install -g expo-cli      verify (optional)    expo whoamiexpo login            expo sharp-cli for web version (optional)    npm install -g sharp-clinpx expo-optimize      Create New App      Initial project    npx create-expo-app learn-expo-app &amp;&amp; cd learn-expo-app            other way:    expo init learn-expo-appcd learn-expo-appnpm run start # you can also use: npx expo start      Running AppJalankan runtimeexpo start  lihat di package.json, pada bagian scripts ada perintahnya, bisa di custom juga. pake npx depannya kalo gagalbuka di android studio emulator  setelah run expo start, tekan Shift + A untuk memilih emulator yang terinstalljika belum install android studio, 1buka di hape android  bisa langsung lewat wifi  bisa lewat usb debugingbuka dengan scrcpydengan android yang di mirroring ke PC bisa juga digunakan jadi emulator.Re-struktur agar mudah dalam pembelajaran  Membuat beberapa project dalam satu workspace, misal folder src dan prod untuk dua project yang berbeda.‚îú‚îÄ‚îÄ App.js‚îú‚îÄ‚îÄ app.json‚îú‚îÄ‚îÄ assets‚îú‚îÄ‚îÄ babel.config.js‚îú‚îÄ‚îÄ node_modules‚îú‚îÄ‚îÄ package-lock.json‚îú‚îÄ‚îÄ package.json‚îú‚îÄ‚îÄ prod‚îÇ¬†¬† ‚îú‚îÄ‚îÄ ProdApp.js‚îÇ¬†¬† ‚îú‚îÄ‚îÄ components‚îÇ¬†¬† ‚îî‚îÄ‚îÄ screens‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ HomeScreens.js‚îú‚îÄ‚îÄ src‚îÇ¬†¬† ‚îú‚îÄ‚îÄ DevApp.js‚îÇ¬†¬† ‚îî‚îÄ‚îÄ screens‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ HomeScreens.js  Cara manggilnya nanti mainin komentar aja di app.js nyaimport ProdApp from \"./prod/ProdApp\";// import DevApp from \"./src/DevApp\";export default function App() {  return (    &lt;ProdApp /&gt;    // &lt;DevApp /&gt;  );}            Cara Install Emulator dengan Android Studio¬†&#8617;      "
  },
  
  {
    "title": "Virtualbox",
    "url": "/posts/virtualbox/",
    "categories": "Notes, Cheatsheet",
    "tags": "windows-11",
    "date": "2022-07-03 00:37:03 +0700",
    





    "snippet": "What is?  This guide was tested on Windows 11 Home EditionRequirement  Windows 11 Home Edition no Hyper-V Features, is Supported?      Yes  EnvironmentInstallConfigCreate InstanceNetworkingVboxManage CLI| Command                                            | Descriptions                   || ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äì | ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî || vboxmanage list vms                                | list all vms                   || vboxmanage startvm ‚ÄúUSVM-Clone-01‚Äù ‚Äìtype headless | start on background            || vboxmanage list runningvms                         | list vms running on background || vboxmanage controlvm ‚ÄúUSVM-Clone-01‚Äù poweroff      | shutdown vms                   |VBoxHeadless -s ‚ÄúUSVM-Clone-01‚Äùmake copy of vm as linkedAutorun VM headless on windows start// TODO: move to ubuntu cheatsheet"
  },
  
  {
    "title": "Laragon",
    "url": "/posts/laragon/",
    "categories": "Tools",
    "tags": "foss",
    "date": "2022-07-02 21:37:29 +0700",
    





    "snippet": "Laragon Home PageWhat is Laragon?Laragon is a portable, isolated, fast &amp; powerful universal development environment for PHP, Node.js, Python, Java, Go, Ruby. It is fast, lightweight, easy-to-use and easy-to-extend.Laragon is great for building and managing modern web applications. It is focused on performance - designed around stability, simplicity, flexibility and freedom.Laragon is very lightweight and will stay as lean as possible. The core binary itself is less than 2MB and uses less than 4MB RAM when running.Laragon doesn‚Äôt use Windows services. It has its own service orchestration which manages services asynchronously and non-blocking so you‚Äôll find things run fast &amp; smoothly with Laragon.  Laragon¬†¬ª Modern &amp; Powerful - Easy OperationProductive. Portable. Fast. Effective. Awesome!Official  Website: https://laragon.org  Download: https://laragon.org/downloadHow To:  install ruby?  install nodejs?  integrasi cmder ke vscode?  java sdk path  Quick share (NGROK server)  quick linux server ??"
  },
  
  {
    "title": "ShareX",
    "url": "/posts/sharex/",
    "categories": "Tools",
    "tags": "foss",
    "date": "2022-07-02 21:18:11 +0700",
    





    "snippet": "ShareX Main Windows  Sharex¬†¬ª Screen capture, file sharing and productivity toolFeatures  Capture screen  Record screen  Upload  ocr  barcode  shortln  more ‚Ä¶Other:  Free, Open SOurce  No AdvertisementDownloads:https://getsharex.com/downloads/"
  },
  
  {
    "title": "VSCode Snippets",
    "url": "/posts/vscode-snippets/",
    "categories": "Notes, Cheatsheet",
    "tags": "snippets",
    "date": "2022-07-02 18:03:54 +0700",
    





    "snippet": "Create &amp; Config  ctrl+shift+p  type snippet  select for global or for current workspace  create snippet  example for yaml frontmater     {     \"front-matter\": {         \"prefix\": \"fmt\",         \"body\": [             \"---\",             \"title: ${1:Title}\",             \"author: ${2:rendrapcx}\",             \"date: $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE $CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND +0700\",             \"categories: [${3:Cheatsheet}]\",             \"tags: [${4:bash}]\",             \"pin: ${5|false,true|}\",             \"---\",             \"## $0\"         ],         \"description\": \"front-matter\"     } }        create new file.md, type fmt  press Ctrl + Space if popup doesnt show  press tab or enterUseful ToolsSnippets Generator  https://snippet-generator.app/Vscode Extension  Snippets Manager"
  },
  
  {
    "title": "Ubuntu WSL 2",
    "url": "/posts/ubuntu-wsl2/",
    "categories": "Notes, Cheatsheet",
    "tags": "wsl",
    "date": "2022-07-01 20:55:00 +0700",
    





    "snippet": "What is?  https://docs.microsoft.com/en-us/windows/wsl/aboutInstall &amp; Config  https://docs.microsoft.com/en-us/windows/wsl/install  https://ubuntu.com/tutorials/install-ubuntu-on-wsl2-on-windows-11-with-gui-support#1-overviewRunning WSLWith Start Menu  using start menu,  find for Ubuntuusing Powsershell  Open Powershell, (press WinCtl + x, type  i )  type wsl on terminal  dan kamu will login to ubuntu in current location you type the command  Or you can select from terminal dropdown tab, to open new tab as ubuntu wsl, seperti pada gambar berikutUsefull CommandPowershell            Command      Descriptions                  wsl -v      cek versi              wsl -l      cek distro              wsl -l -v      cek versi dan list distro              wsl ‚Äìhelp      man page wsl              wsl ‚Äìlist ‚Äìonline      list distro online              wsl.exe ‚Äìinstall      install default distribution              wsl ‚Äìset-default-version 2      set to version 2 wsl version        Install other distro: wsl --install -d &lt;Distribution Name&gt;Ganti Default User            Command      Descriptions                  ubuntu config ‚Äìdefault-user new_user_name      ganti default user distro ubuntu        NOTE: Perintah diatas digunakan di powershell sebelum masuk ke mode wsl            Command      Descriptions                  wslfetch      ¬†              pwd      ¬†              whoami      ¬†        NOTE: Perintah diatas digunakan setelah masuk ke mode wslRunning ubuntu command with wsl  tanpa masuk dulu mode linux  tambahkan wsl sebelum kode perintah under linuxnya          Ex: Cek status ssh wsl service ssh status      WSL Packages &amp; Services            Command      Descriptions                  sudo nano /etc/apt/sources.list      ¬†              sudo apt update      ¬†              sudo apt full-upgrade      ¬†              sudo apt-get purge ‚Äìauto-remove gedit      ..              code .      vscode wsl remote, using code on windows system        by default systemctl was disable because system has not been booted with systemd as init system.gunakan perintah service to check services on wsl, misalkan service ssh status, kalo mau dari powershell wsl service ssh status  kalo ada error ssh gak bisa di start, update dan upgrade dulu, sudo apt update &amp;&amp; sudo apt upgrade {: .prompt-info }            Command      Descriptions                  service ‚Äìstatus-all      display all services on ubuntu wsl              service ssh status      cek status sshd              sudo service ssh start      start sshd              sudo service ssh stop      stop sshd              service ssh ‚Äìfull-restart      restard sshd      System Informations            Command      Descriptions                  lscpu      display information about the CPU architecture              lshw      list hardware              du      Summarize disk usage of the set of FILEs, recursively for directories              df      report file system disk space usage              fdisk      manipulate disk partition table              vmstat      Report virtual memory statistics              uptime      uptime running pc              ip a      check ip address              ip addr      check ip address              ip addr | grep eth0      ¬†      Manage Process            Command      Descriptions                  echo $PATH      display path environment              ps      displays information about a selection of the active processes, eg: ps -e, pas -a              tree      list contents of directories in a tree-like format              pidof -z sshd      List zombie and I/O waiting processes. May cause pidof to hang.              pstree      Display a tree of processes              top      display Linux processes with dynamic real-time view of a running system              htop      mostly like top interactive process viewer      Users &amp; Groups            Command      Descriptions                  cat /etc/passwd      ¬†              useradd      create user only              usermod      create user only              userdel      create user only              adduser      create user also create /home/jack, eg: sudo adduser jack              usermod      mod jack as group sudo sudo usermod -aG sudo jack              cat /etc/passwd      ¬†              groupadd      groupadd marketing accounting              groupmod      groupmod -n marketing old_group              groupdel      ¬†              gpasswd      administer /etc/group and /etc/gshadow              gpasswd -a jack marketing      add jack to group marketing      Permissions            Command      Descriptions                  su jack      switch as jack in current session              su - jack      login to jack environment new session              sudo cat /etc/sudoers      use sudo visudo to modify      Working with Files and Directories            Command      Descriptions                  ls      list dir              cd      change dir              |      pipe              less      eg:  ls /etc/ | less               more      eg:  ls /etc/ | more       hash            Command      Descriptions                  hash      ¬†              cksum      ¬†              find      ¬†              grep      ¬†              diff      ¬†      Link            Command      Descriptions                  ln file1 fileA      hardlink file1 shortcutnya fileA              ln -s folder1 sym-folder1      simbolic link      Compression            Command      Descriptions                  tar      compress: tar -cvf tarball.tar file1 file2 file 3              ¬†      extract: tar -xf tarball.tar              gzip      compress: gzip marketing.tar              ¬†      extract: gzip -d marketing.tar.gz              zip      zip -r [foldername]              ¬†      unzip [foldername]      Manage Log            Command      Descriptions                  lastlog      ¬†              ls /var/log      ¬†              cat /var/log/apt/history.log      grep purge      SSH to AWS EC2      using key.pem method    sudo ssh -i /path/to/key.pem username@&lt;remote_host_ip&gt;      LAMPP  Linux Apache PHP MySql PHP PhpMyAdminApachePHPMySqlPhpMyAdminNetworkchange hostnamehostnamehostnamectlhostnamectl set-hostname sudo nano /etc/hostsInstall Packages untuk BelajarInstall NodeJS      Install NVM (Node Version Manager)          https://docs.microsoft.com/en-us/windows/dev-environment/javascript/nodejs-on-wsl              Or See this post: posts/nvm/      "
  },
  
  {
    "title": "adonisjs 5 - auth",
    "url": "/posts/02.routes-user.ts/",
    "categories": "Series, AdonisJS",
    "tags": "other",
    "date": "2022-07-01 20:55:00 +0700",
    





    "snippet": "/** * filename: /app/modules/User/routes.ts * atau : /start/routes/user.ts * import to start routes.ts *  * import '/app/modules/User/routes.ts' * or * import './routes/user.ts' */import Route from '@ioc:Adonis/Core/Route'import User from 'App/Models/User'import { schema, rules } from '@ioc:Adonis/Core/Validator'Route.group(() =&gt; {    Route.get('/users', async () =&gt; {        const user = await User.all()        return { user }    })    Route.post('/logout', async ({ auth }) =&gt; {        await auth.use('api').revoke()        return { Revoke: true }    })    Route.post('/login', async ({ auth, request }) =&gt; {        const { username, email, password } = request.only(['username', 'email', 'password'])        try {            return await auth                .use('api')                .attempt(email || username, password, { expiresIn: '7days' })        } catch (error) {            return { error }        }    })    Route.post('/register', async ({ request }) =&gt; {        const userSchema = schema.create({            username: schema.string({ trim: true }, [                rules.unique({ table: 'users', column: 'username', caseInsensitive: true })            ]),            email: schema.string({ trim: true }, [                rules.unique({ table: 'users', column: 'email', caseInsensitive: true }),                rules.email()]),            password: schema.string({}, [rules.maxLength(8)])        })        // validate &amp; save        try {            await User.create(await request.validate({ schema: userSchema }))            return { INFO: 'Register Success...' }        } catch (error) {            return { error }        }    })}).prefix('/api')"
  },
  
  {
    "title": "adonisjs 5 - starter",
    "url": "/posts/01.cs-adonis/",
    "categories": "Series, AdonisJS",
    "tags": "other",
    "date": "2022-07-01 20:55:00 +0700",
    





    "snippet": "AdonisJS Cheatsheet  rpcx-api digunakan untuk server latihan API nantinya1. Initial projectnpm init adonis-ts-app@latest rpcx-api2. install packagesnpm install @adonisjs/lucid @Adonisjs/auth phc-argon2paket lainnya:# Mysql &gt;5; mariadb &gt;=10npm i mysql2# postgresqlnpm i pg# Sqlite3npm i sqlite3# Oraclenpm i oracledb# MSSQLnpm i tedious3. Configure- Configure Lucidnode ace configure @adonisjs/lucid# CREATE: config/database.ts# UPDATE: .env,.env.example# UPDATE: tsconfig.json { types += \"@adonisjs/lucid\" }# UPDATE: .adonisrc.json { commands += \"@adonisjs/lucid/build/commands\" }# UPDATE: .adonisrc.json { providers += \"@adonisjs/lucid\" }- configure env.ts// env.tsimport Env from '@ioc:Adonis/Core/Env'export default Env.rules({  HOST: Env.schema.string({ format: 'host' }),  PORT: Env.schema.number(),  APP_KEY: Env.schema.string(),  APP_NAME: Env.schema.string(),  DRIVE_DISK: Env.schema.enum(['local'] as const),  NODE_ENV: Env.schema.enum(['development', 'production', 'test'] as const),  MYSQL_HOST: Env.schema.string({ format: 'host' }),  MYSQL_PORT: Env.schema.number(),  MYSQL_USER: Env.schema.string(),  MYSQL_PASSWORD: Env.schema.string.optional(),  MYSQL_DB_NAME: Env.schema.string(),})create mysql databasemysql -u rootcreate database `rpcx-db`;- configure .envPORT=3333HOST=0.0.0.0NODE_ENV=developmentAPP_KEY=AgmGqITkUEu9JANAafY3gYfMkO2IWctWDRIVE_DISK=localDB_CONNECTION=mysqlMYSQL_HOST=localhostMYSQL_PORT=3306MYSQL_USER=rootMYSQL_PASSWORD=MYSQL_DB_NAME=rpcx-db- configure Auth      Configure Auth    node ace configure @adonisjs/auth      - git initgit initgit add .git commit -m \"Initial API, lucid, &amp; auth\"MigrationModifrun migrationnode ace migration:runSeedmake seedernode ace make:seeder User// database/seeder/user.tsimport BaseSeeder from '@ioc:Adonis/Lucid/Seeder'import User from 'App/Models/User'export default class UserSeeder extends BaseSeeder {  public async run () {    await User.createMany([      {        email: 'virk@adonisjs.com',        password: 'secret',      },      {        email: 'romain@adonisjs.com',        password: 'supersecret'      }    ])  }}run seednode ace db:seed# node ace db:seed --files './database/seeders/User.ts'"
  },
  
  {
    "title": "Getting Started with JS",
    "url": "/posts/getting-started/",
    "categories": "Story, Kisahku",
    "tags": "getting started",
    "date": "2022-07-01 00:00:00 +0700",
    





    "snippet": "Prerequisiteshuh,,, berdarah-darah pisan pokokna mah"
  }
  
]

